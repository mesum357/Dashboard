<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tourist Data</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/css/tourist_data.css">
    <script src="https://cdn.jsdelivr.net/npm/tesseract.js@5/dist/tesseract.min.js"></script>
    <style>
        /* Camera modal styles */
        #cameraModal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        #cameraContainer {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            width: 500px;
            max-width: 90%;
            position: relative;
        }

        #videoPreview {
            width: 100%;
            border: 1px solid #ddd;
            border-radius: 4px;
            margin-bottom: 10px;
        }

        #cameraButtons {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
        }

        #takePhotoBtn, #closeCameraBtn {
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
        }

        #takePhotoBtn {
            background-color: #B06C5D;
            color: white;
        }

        #closeCameraBtn {
            background-color: #f1f1f1;
            color: #333;
        }

        #takePhotoBtn:hover {
            background-color: #9a5a4e;
        }

        #closeCameraBtn:hover {
            background-color: #e0e0e0;
        }
        /* Subadmin sidebar fix */
        .subadmin-sidebar {
            width: 250px;
            position: fixed;
            left: 0;
            top: 0;
            height: 100vh;
            background: #081c3a;
            color: white;
            z-index: 100;
        }
       
        @media (max-width: 768px) {
            .subadmin-sidebar {
                width: 180px;
            }
        }

        /* Foreign passenger fields visibility */
        .number-foreign,
        .number-foreign-females,
        .number-foreign-males {
            display: none;
        }

        .number-foreign.show,
        .number-foreign-females.show,
        .number-foreign-males.show {
            display: block;
        }

        /* Table responsive styles */
        .table-responsive-wrapper {
            width: 100%;
            overflow-x: auto;
            margin-top: 20px;
        }

        /* Fix for subadmin view - section-2 should not have extra margin */
        .section-2 {
            width: 100%;
            box-sizing: border-box;
            padding: 20px;
        }

        .previous-data-table {
            width: 100%;
            border-collapse: collapse;
            min-width: 600px; /* Minimum width to prevent squishing */
        }

        .previous-data-table th,
        .previous-data-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
            white-space: nowrap;
        }

        .previous-data-table th {
            background-color: #f5f5f5;
            font-weight: bold;
        }

        .previous-data-table tr:hover {
            background-color: #f9f9f9;
        }

        /* Ensure main content doesn't overflow */
        .main-content-with-subadmin {
            padding: 20px;
            width: calc(100% - 250px);
            box-sizing: border-box;
        }

        @media (max-width: 768px) {
            .main-content-with-subadmin {
                width: calc(100% - 180px);
            }
        }
    </style>
</head>
<body>
<% if (value === 1) { %>
    <%- include('sidebar') %>
    <style>
        .section-2{
            margin-left: 250px;
        }
    </style>
<% } else if (value === 2) { %>
    <div class="subadmin-sidebar">
        <%- include('subadmin-sidebar') %>
    </div>
    <div class="main-content-with-subadmin">
<% } else { %>
    <% console.log("Error") %>
<% } %>

    <form action="/upload" method="POST" enctype="multipart/form-data">
        <div class="order-info">
            <div class="order-date">
                <label>Order Date</label>
                <input type="text" name="orderDate" value="<%= new Date().toLocaleDateString() %>" readonly required>
            </div>
            <div class="order-time"> 
                <label>Time</label>
                <input type="text" name="orderTime" value="<%= new Date().toLocaleTimeString() %>" readonly required>
            </div>
            <div class="order-time">
                <label>Location</label>
                <% if (typeof isSubAdmin !== 'undefined' && isSubAdmin) { %>
                  <input type="text" name="location" id="location" value="<%= region %>" readonly style="width: 100%; padding: 7px 10px; border: none; border-radius: 5px; background-color: #f0f0f0; color: #333; font-size: 16px; cursor: not-allowed;">
                <% } else { %>
                  <select name="location" id="location" required style="width: 100%; padding: 7px 10px; border: none; border-radius: 5px; background-color: #f0f0f0; color: #333; font-size: 16px; cursor: pointer;">
                    <option value="Karachi">Gilgit</option>
                    <option value="Lahore">Hunza</option>
                    <option value="Islamabad">Skardu</option>
                    <option value="Peshawar">Chalt</option>
                    <option value="Quetta">Ghizer</option>
                  </select>
                <% } %>
            </div>
            <div class="vehicle-number">
                <label>Vehicle Number</label>
                <input type="text" name="vehicleNumber" id="vehicleNumber" required>
            </div>
            <div class="vehicle-number">
                <label>CNIC Number <span style="font-size: 12px; color: #666;">(Without Dashes)</span></label>
                <input type="text" name="cnic" id="cnicNumber" required>
                <div id="cnic-message" style="margin-top: 8px; min-height: 24px;"></div>
                <div id="cnic-spinner" style="display:none; margin-top: 8px;">
                  <i class="fas fa-spinner fa-spin"></i> Detecting CNIC...
                </div>
            </div>
        </div>

        <div class="personal-info">
            <h3>Personal Information</h3>
            <div class="data-main">
                <div class="personal-info-main">
                    <div class="profile-image">
                        <label>CNIC Image</label>
                        <div class="image-upload">
                            <div class="upload-container">
                                <img src="/assets/images/Input.png" alt="Profile Preview" id="profilePreview">
                                <input type="file" name="profileImage" id="profileInput" accept="image/*" capture="environment" onchange="previewImage(this, 'profilePreview')">
                                <label for="profileInput" class="upload-label">Choose File</label>
                                <button type="button" onclick="openCamera('profile')">Capture Image</button>
                            </div>
                        </div>
                    </div>
                    <div class="driving-license">
                        <label>Driving License</label>
                        <div class="image-upload">
                            <div class="upload-container">
                                <img src="/assets/images/Input.png" alt="License Preview" id="licensePreview">
                                <input type="file" name="drivingLicenseImage" id="licenseInput" accept="image/*" capture="environment" onchange="previewImage(this, 'licensePreview')">
                                <label for="licenseInput" class="upload-label">Choose File</label>
                                <button type="button" onclick="openCamera('license')">Capture Image</button>
                            </div>
                        </div>
                    </div>
                    <div class="vehicle-image">
                        <label>Vehicle Image</label>
                        <div class="image-upload">
                            <div class="upload-container">
                                <img src="/assets/images/Input.png" alt="Vehicle Preview" id="vehiclePreview">
                                <input type="file" name="vehicleImage" id="vehicleInput" accept="image/*" capture="environment" onchange="previewImage(this, 'vehiclePreview')">
                                <label for="vehicleInput" class="upload-label">Choose File</label>
                                <button type="button" onclick="openCamera('vehicle')">Capture Image</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Camera Modal -->
                <div id="cameraModal" class="modal">
                    <div id="cameraContainer">
                        <h3>Capture Image</h3>
                        <video id="videoPreview" autoplay></video>
                        <div id="cameraButtons">
                            <button id="takePhotoBtn" onclick="takePhoto(event)">Capture</button>
                            <button id="closeCameraBtn" onclick="closeCamera()">Close</button>
                        </div>
                    </div>
                </div>

                
                </div>

                <div class="passenger-info-main">
                    <div class="passenger-info">
                        <div class="total-passengers">
                            <label>Total Passengers</label>
                            <input type="number" placeholder="No of Passengers" name="passengers" required>
                        </div>
                        <div class="number-females">
                            <label>Number of Females</label>
                            <input type="number" placeholder="Number of Female Passengers" name="females" required>
                        </div>
                        <div class="number-males">
                            <label>Number of Males</label>
                            <input type="number" placeholder="Number of Male Passengers" name="males" required>
                        </div>
                        <div class="number-foreign">
                            <label>Total Foreign Passengers</label>
                            <input type="number" placeholder="Number of Foreign Passengers" name="foreigners" value="0">
                        </div>
                        <div class="number-foreign-females">
                            <label>Foreign Female Passengers</label>
                            <input type="number" placeholder="Number of Foreign Female Passengers" name="foreignFemales" value="0">
                        </div>
                        <div class="number-foreign-males">
                            <label>Foreign Male Passengers</label>
                            <input type="number" placeholder="Number of Foreign Male Passengers" name="foreignMales" value="0">
                        </div>
                    </div>
                    <div class="vehicle-info">
                        <div class="vehicle-passengers">
                            <h3>Vehicle with Passengers</h3>
                            <input type="checkbox" class="checkbox" id="vehiclePassengersCheckbox">
                            <input type="hidden" name="vehiclePassengers" id="vehiclePassengersHidden" value="no">
                        </div>
                        <div class="vehicle-goods">
                            <h3>Vehicle with Goods</h3>
                            <input type="checkbox" class="checkbox" id="vehicleGoodsCheckbox">
                            <input type="hidden" name="vehicleGoods" id="vehicleGoodsHidden" value="no">
                        </div>
                        <div class="vehicle-foreign">
                            <h3>Vehicle with Foreign Passengers</h3>
                            <input type="checkbox" class="checkbox" id="vehicleForeignCheckbox">
                            <input type="hidden" name="vehicleForeign" id="vehicleForeignHidden" value="no">
                        </div>
                        <div class="type-goods">
                            <label>Type of Goods</label>
                            <input type="text" placeholder="Enter type of goods" name="goods">
                        </div>
                    </div>
                </div>
            </div>
<% if(value === 1) { %>
    <button type="submit" class="save-data" name="submit" value="admin">Save Data</button>
<% } else if(value === 2) { %>
    <button type="submit" class="save-data" name="submit" value="subadmin">Save Data</button>
<% } else { %>
    <% console.log("Error") %>
<% } %>
        </div>
    </form>

    <!-- SECTION 2 -->
    <div class="section-2">
        <h3>Previous Data</h3>
        <div class="table-responsive-wrapper">
            <table class="previous-data-table">
                <thead>
                    <tr>
                        <th>SL No</th>
                        <th>Order No</th>
                        <th>Time</th>
                        <th>Vehicle No</th>
                        <th>Females</th>
                        <th>Males</th>
                        <th>Total Pass</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (typeof data !== 'undefined' && data.length > 0) { %>
                        <% data.forEach((upload, index) => { %>
                            <tr style="cursor: pointer;" 
                                onclick="window.location.href='<%= value === 1 ? `/tourist_info/${upload.srNo}` : `/tourists/${upload.srNo}` %>'">
                                <td><%= upload.srNo %></td>
                                <td><%= upload.orderNo %></td>
                                <td><%= upload.time %></td>
                                <td><%= upload.vehicleNumber %></td>
                                <td><%= upload.females || 0 %></td>
                                <td><%= upload.males || 0 %></td>
                                <td><%= upload.passengers || ((upload.males || 0) + (upload.females || 0)) %></td>
                                <input type="hidden" name="no" value="<%= upload.srNo %>">
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="8" style="text-align: center; padding: 20px;">No previous data available.</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>

    </div>
</body>
    <!-- Keep the previewImage function -->
    <script>
const vehicleNumberInput = document.getElementById('vehicleNumber');
vehicleNumberInput.addEventListener('input', function() {
    this.value = this.value.toUpperCase();
});


        function previewImage(input, previewId) {
            const preview = document.getElementById(previewId);
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.src = e.target.result;
                }
                reader.readAsDataURL(input.files[0]);
            } else {
                preview.src = '/assets/images/Input.png';
            }
        }

        // Camera functionality
        let cameraStream = null;
        let currentCaptureTarget = null;

        function openCamera(target) {
            currentCaptureTarget = target;
            document.getElementById('cameraModal').style.display = 'flex';
            startCamera();
        }

        function startCamera() {
            if (cameraStream) {
                cameraStream.getTracks().forEach(track => track.stop());
            }

            // Request the environment (back) camera if available
            navigator.mediaDevices.getUserMedia({ video: { facingMode: { exact: 'environment' } } })
                .then(stream => {
                    cameraStream = stream;
                    const video = document.getElementById('videoPreview');
                    video.srcObject = stream;
                    video.play();
                })
                .catch(error => {
                    // If the environment camera is not available, fallback to any camera
                    navigator.mediaDevices.getUserMedia({ video: true })
                        .then(stream => {
                            cameraStream = stream;
                            const video = document.getElementById('videoPreview');
                            video.srcObject = stream;
                            video.play();
                        })
                        .catch(error => {
                            console.error('Error accessing camera:', error);
                            alert('Unable to access camera. Please allow camera permissions.');
                        });
                });
        }

        function takePhoto(event) {
            event.preventDefault(); // Prevent form submission

            const video = document.getElementById('videoPreview');
            const canvas = document.createElement('canvas');
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            const ctx = canvas.getContext('2d');
            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);

            const dataUrl = canvas.toDataURL('image/png');
            let preview, input;
            if (currentCaptureTarget === 'profile') {
                preview = document.getElementById('profilePreview');
                input = document.getElementById('profileInput');
            } else if (currentCaptureTarget === 'license') {
                preview = document.getElementById('licensePreview');
                input = document.getElementById('licenseInput');
            } else if (currentCaptureTarget === 'vehicle') {
                preview = document.getElementById('vehiclePreview');
                input = document.getElementById('vehicleInput');
            }
            if (preview && input) {
                preview.src = dataUrl;
                const fileName = `captured-${Date.now()}.png`;
                const blob = dataUrlToBlob(dataUrl);
                const file = new File([blob], fileName, { type: 'image/png' });
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(file);
                input.files = dataTransfer.files;

                // If this is the CNIC image, run OCR
                if (currentCaptureTarget === 'profile') {
                    handleCNICImage(input);
                }
            }
            closeCamera();
        }

        function closeCamera() {
            if (cameraStream) {
                cameraStream.getTracks().forEach(track => track.stop());
                cameraStream = null;
            }
            document.getElementById('cameraModal').style.display = 'none';
        }

        function dataUrlToBlob(dataUrl) {
            const arr = dataUrl.split(',');
            const mime = arr[0].match(/:(.*?);/)[1];
            const bstr = atob(arr[1]);
            let n = bstr.length;
            const u8arr = new Uint8Array(n);
            while (n--) {
                u8arr[n] = bstr.charCodeAt(n);
            }
            return new Blob([u8arr], { type: mime });
        }

        // Close camera when modal is clicked outside
        document.getElementById('cameraModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeCamera();
            }
        });

        // Update hidden input based on checkbox state
        document.getElementById('vehiclePassengersCheckbox').addEventListener('change', function() {
            document.getElementById('vehiclePassengersHidden').value = this.checked ? 'yes' : 'no';
        });

        document.getElementById('vehicleGoodsCheckbox').addEventListener('change', function() {
            document.getElementById('vehicleGoodsHidden').value = this.checked ? 'yes' : 'no';
        });

        document.getElementById('vehicleForeignCheckbox').addEventListener('change', function() {
            document.getElementById('vehicleForeignHidden').value = this.checked ? 'yes' : 'no';
            
            // Toggle visibility of foreign passenger fields
            const foreignFields = [
                document.querySelector('.number-foreign'),
                document.querySelector('.number-foreign-females'),
                document.querySelector('.number-foreign-males')
            ];
            
            foreignFields.forEach(field => {
                if (this.checked) {
                    field.classList.add('show');
                } else {
                    field.classList.remove('show');
                    // Clear the input values when hiding
                    const input = field.querySelector('input');
                    if (input) input.value = '';
                }
            });
        });

        // CNIC OCR logic
        document.getElementById('profileInput').addEventListener('change', function() {
            handleCNICImage(this);
        });

        async function handleCNICImage(input) {
            const file = input.files && input.files[0];
            const messageDiv = document.getElementById('cnic-message');
            const spinner = document.getElementById('cnic-spinner');
            const cnicInput = document.getElementById('cnicNumber');
            if (!file) return;

            spinner.style.display = 'block';
            messageDiv.textContent = '';
            messageDiv.style.color = '';
            spinner.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Detecting CNIC... 0%';

            // Preprocess image for better OCR
            const img = new Image();
            img.src = URL.createObjectURL(file);
            img.onload = async function() {
                // Resize to max 500px width for better accuracy
                const canvas = document.createElement('canvas');
                const scale = Math.min(1, 500 / img.width);
                canvas.width = img.width * scale;
                canvas.height = img.height * scale;
                const ctx = canvas.getContext('2d');
                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);

                // Convert to grayscale and apply thresholding
                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
                for (let i = 0; i < imageData.data.length; i += 4) {
                    // Grayscale
                    const avg = (imageData.data[i] + imageData.data[i+1] + imageData.data[i+2]) / 3;
                    // Threshold
                    const value = avg > 128 ? 255 : 0;
                    imageData.data[i] = imageData.data[i+1] = imageData.data[i+2] = value;
                }
                ctx.putImageData(imageData, 0, 0);

                try {
                    const { data: { text } } = await Tesseract.recognize(
                        canvas,
                        'eng',
                        {
                            logger: m => {
                                if (m.status === 'recognizing text' && m.progress) {
                                    spinner.innerHTML = `<i class=\"fas fa-spinner fa-spin\"></i> Detecting CNIC... ${Math.round(m.progress * 100)}%`;
                                }
                            },
                            tessedit_char_whitelist: '0123456789-'
                        }
                    );
                    // CNIC format: 5 digits - 7 digits - 1 digit (e.g., 12345-1234567-1)
                    const cnicRegex = /\b\d{5}-\d{7}-\d\b/;
                    const match = text.match(cnicRegex);
                    if (match) {
                        cnicInput.value = match[0].replace(/-/g, '');
                        messageDiv.textContent = 'CNIC detected successfully!';
                        messageDiv.style.color = 'green';
                    } else {
                        cnicInput.value = '';
                        messageDiv.textContent = 'Could not detect a valid CNIC number. Please try again with a clearer image.';
                        messageDiv.style.color = 'red';
                    }
                } catch (err) {
                    cnicInput.value = '';
                    messageDiv.textContent = 'Error during OCR. Please try again.';
                    messageDiv.style.color = 'red';
                } finally {
                    spinner.style.display = 'none';
                    setTimeout(() => { messageDiv.textContent = ''; }, 5000);
                }
            };
        }
    </script>
</html>